before(() => {
    cy.login();
    cy.openManageBuildings()
})
describe('Manage Buildings Suite', () => {
    describe('Manage Buildings Text Validation', () => {
        it('search section text validation', () => {
            cy.get('nb-card-header > .title').should('have.text', 'Search Buildings')
            cy.get(':nth-child(1) > .form-group > .label').should('have.text', 'Building Number')
            cy.get(':nth-child(2) > .form-group > .label').should('have.text', 'Project Name')
            cy.get(':nth-child(3) > .form-group > .label').should('have.text', 'Availability')
            cy.get('.c-btn > :nth-child(1)').should('have.text', 'Choose Project')
            cy.get('.form-control').contains('Availability')
            cy.get('.btn-secondary').should('have.text', 'Search')
            cy.get('.btn-light').should('have.text', 'Clear')
            cy.get('.btn-dark').should('have.text', 'Add')

        })
        it('grid section text validation', () => {
            cy.get('.row > :nth-child(1) > .title').should('have.text', 'Buildings')
            cy.get('.mx-2 > img').should('be.visible')
            cy.get('[title="Export To PDF"] > img').should('be.visible')
            cy.get('.cdk-column-buildingNumber > .mat-sort-header-container > .mat-sort-header-button').should('have.text', ' Building Number ')
            cy.get('.cdk-column-projectName > .mat-sort-header-container > .mat-sort-header-button').should('have.text', 'Project Name')
            cy.get('.cdk-column-availabilityStatus > .mat-sort-header-container > .mat-sort-header-button').contains('Availability')
            cy.get('.mat-header-row > .cdk-column-operations').contains('Operations')
            cy.get(':nth-child(1) > .d-flex > .btn-info').should('have.text', 'Edit')
            cy.get(':nth-child(1) > .d-flex > .btn-danger').should('have.text', 'Delete')
            cy.get('.mat-paginator-page-size-label').should('have.text', 'Items per page:')
        })
        it('add building dialog text', () => {
            // cy.get('#mat-dialog-0').within(()=>{

            // })
            cy.Add()
            cy.get('mat-dialog-container[role="dialog"]').should('be.visible')
            cy.get('app-buildings-add.ng-star-inserted > :nth-child(1) > .col-md-12 > nb-card > nb-card-header > .title')
                .should('have.text', 'Add Building')
            cy.get(':nth-child(1) > .label > :nth-child(1)').should('have.text', 'Project Name')
            // cy.get('div[_ngcontent-qmy-c467=""] > .custom-class > .cuppa-dropdown > .selected-list > .c-btn')
            // .contains('Choose Project')
            // cy.get('div[_ngcontent-emy-c466=""] > .custom-class > .cuppa-dropdown > .selected-list > .c-btn > :nth-child(1)')
            cy.get(':nth-child(2) > .label > :nth-child(1)').should('have.text', 'Building Number')
            cy.get(':nth-child(3) > .label > :nth-child(1)').should('have.text', 'Availability')
            cy.get(':nth-child(3) > div > .form-control').contains('Choose Availability')
            cy.get('.mb-0 > .label').contains('Note (English)')
            cy.get(':nth-child(5) > .label').contains('Note (Arabic)')
            cy.get('.ng-invalid.ng-star-inserted > .row > .col-12.text-right > .btn-dark').should('have.text', 'Add')
            cy.get('.ng-invalid.ng-star-inserted > .row > .col-12.text-right > .btn-light').should('have.text', 'Cancel')
            cy.reload()
        })
    })
    describe('Manage Buildings Functional testing', () => {
        describe('filter suite', () => {
            it('filter by project number', () => {
                cy.Clear()
                cy.get('.input-full-width').type('ABC')
                cy.Search()
                cy.get('.mat-row > .cdk-column-buildingNumber').should('have.text', ' ABC ')
                cy.get('.mat-row > .cdk-column-projectName').should('have.text', ' CypressProject ')
                cy.get('.btn-info').should('be.visible')
                cy.get('.btn-danger').should('be.visible')
                cy.reload()
            })
            it('filter by project type', () => {
                cy.Clear()
                cy.get('form.ng-untouched > .row > :nth-child(2)').within(() => {
                    cy.contains('CypressProject').click({ force: true })
                })
                cy.Search()
                cy.get('.mat-row > .cdk-column-buildingNumber').contains('ABC')
                cy.get('.mat-row > .cdk-column-projectName').contains('CypressProject')
                cy.get('.btn-info').should('be.visible')
                cy.get('.btn-danger').should('be.visible')
                cy.reload()
            })
            it('filter by availability', () => {
                cy.Clear()
                cy.get('.form-control').select('Yes')
                cy.Search()
                cy.get('.mat-row > .cdk-column-buildingNumber').contains(' ABC ')
                cy.get('.mat-row > .cdk-column-projectName').contains(' CypressProject ')
                cy.get('.btn-info').should('be.visible')
                cy.get('.btn-danger').should('be.visible')
                cy.get('.form-control').select('No')
                cy.Search()
                cy.get('.text-md-center').contains('No Data Found')
                cy.reload()
            })
        })
        describe('manage buildings operations', () => {
            describe('Adding Scenarios', () => {

                it('Cancel without adding', () => {
                    cy.Add()
                    cy.Abort()
                    cy.wait(500)
                    cy.get('app-buildings-add.ng-star-inserted > :nth-child(1) > .col-md-12').should('not.exist')
                    cy.reload()
                })
                it('Add building with no values', () => {
                    cy.Add()
                    cy.SubmitDialog()
                    cy.get('div[class="invalid-feedback ng-star-inserted"]').children().should('have.length', 3)
                    cy.get(':nth-child(1) > :nth-child(2) > .invalid-feedback > .ng-star-inserted')
                        .should('have.text', 'Project name is required')
                    cy.get(':nth-child(2) > :nth-child(2) > .invalid-feedback > .ng-star-inserted')
                        .should('have.text', 'Building number is required')
                    cy.get(':nth-child(3) > :nth-child(2) > .invalid-feedback > .ng-star-inserted')
                        .should('have.text', 'Availability is required')
                    cy.reload()
                })
                it('Add building with correct values', () => {
                    cy.Add()
                    //cy.get('#cdk-overlay-3')
                    cy.get('mat-dialog-container[role="dialog"]')
                        //cy.get('mat-dialog-container[class="mat-dialog-container ng-tns-c264-29 ng-trigger ng-trigger-dialogContainer ng-star-inserted"]')
                        .within(() => {
                            cy.get('.ng-untouched.ng-star-inserted > .row > :nth-child(1)').within(() => {
                                cy.contains('CypressProject').click({ force: true })
                            })
                            cy.get(':nth-child(2) > div > .form-control').type('1')
                            cy.get(':nth-child(3) > div > .form-control').select('Yes')
                            cy.get('.mb-0 > div > .form-control').type('note')
                            cy.get(':nth-child(5) > div > .form-control').type('نوت')
                            cy.SubmitDialog()
                        })
                    cy.Toast().should('be.visible')
                    cy.Toast().should('have.text', 'Building Created Successfully.')

                    cy.reload()
                })
                it('Add already exist building', () => {
                    cy.Add()
                    // cy.get('#cdk-overlay-3')
                    cy.get('mat-dialog-container[role="dialog"]')
                        // cy.get('mat-dialog-container[class="mat-dialog-container ng-tns-c264-29 ng-trigger ng-trigger-dialogContainer ng-star-inserted"]')
                        .within(() => {
                            cy.get('.ng-untouched.ng-star-inserted > .row > :nth-child(1)').within(() => {
                                cy.contains('CypressProject').click({ force: true })
                            })
                            cy.get(':nth-child(2) > div > .form-control').type('1')
                            cy.get(':nth-child(3) > div > .form-control').select('Yes')
                            cy.get('.mb-0 > div > .form-control').type('note')
                            cy.get(':nth-child(5) > div > .form-control').type('نوت')
                            cy.SubmitDialog()
                        })

                    cy.Toast().should('be.visible')
                    cy.Toast().should('have.text', 'Building with same number already exist.')

                    cy.reload()
                })
            })
            describe('edit scenarios', () => {
                it('cancel without editing', () => {
                    cy.get('.input-full-width').type('1')
                    cy.get('.form-control').select('Yes')
                    cy.get(':nth-child(2) > .form-group').within(() => {
                        cy.contains('CypressProject').click({ force: true })
                    })
                    cy.Search()
                    cy.wait(500)
                    cy.Edit()
                    cy.Abort()
                    cy.wait(500)
                    cy.get('mat-dialog-container[role="dialog"]').should('not.exist')

                    cy.reload()
                })
                it('update without changing', () => {
                    cy.get('.input-full-width').type('1')
                    cy.get('.form-control').select('Yes')
                    cy.get(':nth-child(2) > .form-group').within(() => {
                        cy.contains('CypressProject').click({ force: true })
                    })
                    cy.Search()
                    cy.wait(500)
                    cy.Edit()
                    cy.SubmitDialog()
                    cy.Toast().should('be.visible')
                    cy.Toast().should('have.text', 'Building Updated Successfully.')
                    cy.reload()
                })
                it('update to already existing building', () => {
                    cy.get('.input-full-width').type('1')
                    cy.get('.form-control').select('Yes')
                    cy.get(':nth-child(2) > .form-group').within(() => {
                        cy.contains('CypressProject').click({ force: true })
                    })
                    cy.Search()
                    cy.wait(500)
                    cy.Edit()
                    cy.get('mat-dialog-container[role="dialog"]')
                        //cy.get('mat-dialog-container[class="mat-dialog-container ng-tns-c264-29 ng-trigger ng-trigger-dialogContainer ng-star-inserted"]')
                        .within(() => {
                            cy.get('.ng-untouched.ng-star-inserted > .row > :nth-child(1)').within(() => {
                                cy.contains('CypressProject').click({ force: true })
                            })
                            cy.get(':nth-child(2) > div > .form-control').clear()
                            cy.get(':nth-child(2) > div > .form-control').type('ABC')
                            cy.get(':nth-child(3) > div > .form-control').select('Yes')
                            cy.get('.mb-0 > div > .form-control').clear()
                            cy.get('.mb-0 > div > .form-control').type('note')
                            cy.get(':nth-child(5) > div > .form-control').clear()
                            cy.get(':nth-child(5) > div > .form-control').type('نوت')
                            cy.SubmitDialog()
                        })
                    cy.Toast().should('be.visible')
                    cy.Toast().should('have.text', 'Building with same number already exist.')
                    cy.reload()
                })
                it('update with correct values', () => {
                    cy.get('.input-full-width').type('1')
                    cy.get('.form-control').select('Yes')
                    cy.get(':nth-child(2) > .form-group').within(() => {
                        cy.contains('CypressProject').click({ force: true })
                    })
                    cy.Search()
                    cy.wait(500)
                    cy.Edit()
                    cy.get('mat-dialog-container[role="dialog"]')
                        //cy.get('mat-dialog-container[class="mat-dialog-container ng-tns-c264-29 ng-trigger ng-trigger-dialogContainer ng-star-inserted"]')
                        .within(() => {
                            cy.get('.ng-untouched.ng-star-inserted > .row > :nth-child(1)').within(() => {
                                cy.contains('CypressProject').click({ force: true })
                            })
                            cy.get(':nth-child(2) > div > .form-control').clear()
                            cy.get(':nth-child(2) > div > .form-control').type('1')
                            cy.get(':nth-child(3) > div > .form-control').select('Yes')
                            cy.get('.mb-0 > div > .form-control').clear()
                            cy.get('.mb-0 > div > .form-control').type('note')
                            cy.get(':nth-child(5) > div > .form-control').clear()
                            cy.get(':nth-child(5) > div > .form-control').type('نوت')
                            cy.SubmitDialog()

                        })
                    cy.Toast().should('be.visible')
                    cy.Toast().should('have.text', 'Building Updated Successfully.')
                    cy.reload()
                })
            })
            describe('delete scenarios', () => {
                it('abort delete', () => {
                    cy.Clear()
                    cy.get('.input-full-width').type('1')
                    cy.get('.form-control').select('Yes')
                    cy.get(':nth-child(2) > .form-group').within(() => {
                        cy.contains('CypressProject').click({ force: true })
                    })
                    cy.Search()
                    cy.wait(500)
                    cy.get('.btn-danger').click()
                    cy.get('mat-dialog-container[role="dialog"]').should('be.visible')
                    cy.get('div[class="col-12 mb-4"]').should('have.text', ' Are you sure you want to delete this building ? ')
                    cy.get('button[class="btn btn-light"]').click()
                    cy.get('mat-dialog-container[role="dialog"]').should('not.exist')
                    cy.reload()
                })
                it('delete test project', () => {
                    cy.Clear()
                    cy.get('.input-full-width').type('1')
                    cy.get('.form-control').select('Yes')
                    cy.get(':nth-child(2) > .form-group').within(() => {
                        cy.contains('CypressProject').click({ force: true })
                    })
                    cy.Search()
                    cy.wait(500)
                    cy.get('.btn-danger').click()
                    cy.get('mat-dialog-container[role="dialog"]').should('be.visible')
                    cy.get('div[class="col-12 mb-4"]').should('have.text', ' Are you sure you want to delete this building ? ')
                    cy.get('button[class="btn btn-danger mx-2"]').click()
                    cy.get('.message').should('be.visible')
                    cy.get('.message').should('have.text', 'Building Deleted Successfully.')
                    cy.reload()
                })


            })
        })
    })
})